IDENTIFICATION DIVISION.
	PROGRAM-ID. AOC-2020-DAY-12.

ENVIRONMENT DIVISION.
	INPUT-OUTPUT SECTION.
	FILE-CONTROL.
		SELECT InputFile ASSIGN TO "input.txt"
			ORGANIZATION IS LINE SEQUENTIAL.

DATA DIVISION.
	FILE SECTION.
	FD InputFile.
	01 INPUT-FILE.
		05 INPUT-LINE PIC X(4).
	
	WORKING-STORAGE SECTION.
	01 WS-EOF PIC 9(1) VALUE 0.
	01 WS-INPUT.
		05 WS-INPUT-LINE PIC X(4).
	01 WS-NAV-COMMANDS.
		05 WS-COMMAND OCCURS 800 TIMES INDEXED BY I.
			10 WS-LETTER PIC A(1).
			10 WS-PARAM PIC X(3).
		05 WS-COMMANDS-SIZE PIC 9(4).
		05 WS-VALUE PIC 9(3).
	01 WS-COORDS.
		05 WS-SIMPLE-EAST PIC S9(8) VALUE 0.
		05 WS-SIMPLE-NORTH PIC S9(8) VALUE 0.
		05 WS-COMPLEX-EAST PIC S9(8) VALUE 0.
		05 WS-COMPLEX-NORTH PIC S9(8) VALUE 0.
		05 WS-WAYPOINT-EAST PIC S9(8) VALUE 10.
		05 WS-WAYPOINT-NORTH PIC S9(8) VALUE 1.
	01 WS-TEMP PIC S9(8).
	01 WS-DIRECTION PIC S9(4) VALUE 90.
	01 WS-SIMPLE-DISTANCE PIC 9(8) VALUE 0.
	01 WS-COMPLEX-DISTANCE PIC 9(8) VALUE 0.
	01 WS-FORMATTED-NUMBER PIC ZZZZZZ.

PROCEDURE DIVISION.

	OPEN INPUT InputFile.
		PERFORM VARYING I FROM 1 BY 1 UNTIL WS-EOF=1
			READ InputFile INTO WS-INPUT-LINE
				AT END
					MOVE 1 TO WS-EOF
				NOT AT END
					MOVE WS-INPUT-LINE TO WS-COMMAND(I)
					MOVE I TO WS-COMMANDS-SIZE
			END-READ
		END-PERFORM.
	CLOSE InputFile.
	
	PERFORM VARYING I FROM 1 BY 1 UNTIL I>WS-COMMANDS-SIZE
		MOVE WS-PARAM(I) TO WS-VALUE
		EVALUATE WS-LETTER(I)
			WHEN "N"
				ADD WS-VALUE TO WS-SIMPLE-NORTH WS-WAYPOINT-NORTH
			WHEN "E"
				ADD WS-VALUE TO WS-SIMPLE-EAST WS-WAYPOINT-EAST
			WHEN "S"
				SUBTRACT WS-VALUE FROM WS-SIMPLE-NORTH WS-WAYPOINT-NORTH
			WHEN "W"
				SUBTRACT WS-VALUE FROM WS-SIMPLE-EAST WS-WAYPOINT-EAST
			WHEN "F"
				MOVE FUNCTION MOD(WS-DIRECTION, 360) TO WS-DIRECTION
				EVALUATE WS-DIRECTION
					WHEN 0
						ADD WS-VALUE TO WS-SIMPLE-NORTH
					WHEN 90
						ADD WS-VALUE TO WS-SIMPLE-EAST
					WHEN 180
						SUBTRACT WS-VALUE FROM WS-SIMPLE-NORTH
					WHEN 270
						SUBTRACT WS-VALUE FROM WS-SIMPLE-EAST
				END-EVALUATE
				COMPUTE WS-COMPLEX-NORTH=(WS-COMPLEX-NORTH)+(WS-WAYPOINT-NORTH * WS-VALUE)
				COMPUTE WS-COMPLEX-EAST=(WS-COMPLEX-EAST)+(WS-WAYPOINT-EAST * WS-VALUE)
			WHEN "L"
				SUBTRACT WS-VALUE FROM WS-DIRECTION
				PERFORM UNTIL WS-VALUE=0
					MOVE WS-WAYPOINT-NORTH TO WS-TEMP
					SUBTRACT WS-TEMP FROM 0 GIVING WS-TEMP
					MOVE WS-WAYPOINT-EAST TO WS-WAYPOINT-NORTH
					MOVE WS-TEMP TO WS-WAYPOINT-EAST
					SUBTRACT 90 FROM WS-VALUE
				END-PERFORM
			WHEN "R"
				ADD WS-VALUE TO WS-DIRECTION
				PERFORM UNTIL WS-VALUE=0
					MOVE WS-WAYPOINT-EAST TO WS-TEMP
					SUBTRACT WS-TEMP FROM 0 GIVING WS-TEMP
					MOVE WS-WAYPOINT-NORTH TO WS-WAYPOINT-EAST
					MOVE WS-TEMP TO WS-WAYPOINT-NORTH
					SUBTRACT 90 FROM WS-VALUE
				END-PERFORM
		END-EVALUATE
	END-PERFORM.
	
	ADD FUNCTION ABS(WS-SIMPLE-NORTH) TO WS-SIMPLE-DISTANCE.
	ADD FUNCTION ABS(WS-SIMPLE-EAST) TO WS-SIMPLE-DISTANCE.
	MOVE WS-SIMPLE-DISTANCE TO WS-FORMATTED-NUMBER.
	DISPLAY "Part 1 answer: " WS-FORMATTED-NUMBER.
	
	ADD FUNCTION ABS(WS-COMPLEX-NORTH) TO WS-COMPLEX-DISTANCE.
	ADD FUNCTION ABS(WS-COMPLEX-EAST) TO WS-COMPLEX-DISTANCE.
	MOVE WS-COMPLEX-DISTANCE TO WS-FORMATTED-NUMBER.
	DISPLAY "Part 2 answer: " WS-FORMATTED-NUMBER.
	
STOP RUN.
